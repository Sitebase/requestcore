<?xml version="1.0" encoding="UTF-8"?>
<vanity xmlns="http://github.com/skyzyx/vanity"><class><name>ResponseCore</name><fileData><docBlock><section><headline>File</headline><contents><![CDATA[Handles all linear and parallel HTTP requests using cURL and manages the responses.]]></contents></section><section><headline>Version</headline><contents><line><![CDATA[2010.03.21]]></line></contents></section><section><headline>Copyright</headline><contents><line><![CDATA[2006-2010 Ryan Parman, Foleeo Inc., and contributors.]]></line></contents></section><section><headline>License</headline><contents><entry><param><![CDATA[Simplified BSD License]]></param><description><![CDATA[http://opensource.org/licenses/bsd-license.php]]></description></entry></contents></section></docBlock></fileData><summary><file>requestcore.class.php</file><docBlock><section><headline>Class</headline><contents><line><![CDATA[Container for all response-related methods.]]></line></contents></section></docBlock></summary><constants count="0"/><properties count="3"><property><name>body</name><access>public</access><documented>true</documented><description><line><![CDATA[Stores the SimpleXML response.]]></line></description></property><property><name>header</name><access>public</access><documented>true</documented><description><line><![CDATA[Stores the HTTP header information.]]></line></description></property><property><name>status</name><access>public</access><documented>true</documented><description><line><![CDATA[Stores the HTTP response code.]]></line></description></property></properties><methods count="2"><method><name>__construct</name><parameters><parameter><name>header</name><required>true</required></parameter><parameter><name>body</name><required>true</required></parameter><parameter><name>status</name><required>false</required><defaultValue><![CDATA[null]]></defaultValue></parameter></parameters><access>public</access><docBlock><section><headline>Method</headline><contents><![CDATA[The constructor]]></contents></section><section><headline>Access</headline><contents><line><![CDATA[public]]></line></contents></section><section><headline>Parameters</headline><contents><entry><param><![CDATA[$header]]></param><type><![CDATA[array]]></type><required><![CDATA[Required]]></required><description><![CDATA[Associative array of HTTP headers (typically returned by [get_response_header()](../requestcore/get_response_header.html)).]]></description></entry><entry><param><![CDATA[$body]]></param><type><![CDATA[string]]></type><required><![CDATA[Required]]></required><description><![CDATA[XML-formatted response from AWS.]]></description></entry><entry><param><![CDATA[$status]]></param><type><![CDATA[integer]]></type><required><![CDATA[Optional]]></required><description><![CDATA[HTTP response status code from the request.]]></description></entry></contents></section><section><headline>Returns</headline><contents><line><![CDATA[_object_ Contains an _array_ `header` property (HTTP headers as an associative array), a _SimpleXMLElement_ or _string_ `body` property, and an _integer_ `status` code.]]></line></contents></section></docBlock><documented>true</documented><source><startLine>759</startLine><endLine>765</endLine><numberOfLines>7</numberOfLines><code><![CDATA[public function __construct($header, $body, $status = null)
{
    $this-&gt;header = $header;
    $this-&gt;body = $body;
    $this-&gt;status = $status;
    return $this;
}
]]></code></source></method><method><name>isOK</name><parameters><parameter><name>codes</name><required>false</required><defaultValue><![CDATA[array( 200, 201, 204 )]]></defaultValue></parameter></parameters><access>public</access><docBlock><section><headline>Method</headline><contents><![CDATA[Did we receive the status code we expected?]]></contents></section><section><headline>Access</headline><contents><line><![CDATA[public]]></line></contents></section><section><headline>Parameters</headline><contents><entry><param><![CDATA[$codes]]></param><type><line><![CDATA[integer]]></line><line><![CDATA[array]]></line></type><required><![CDATA[Optional]]></required><description><![CDATA[The status code(s) to expect. Pass an _integer_ for a single acceptable value, or an _array_ of integers for multiple acceptable values. Defaults to _array_.]]></description></entry></contents></section><section><headline>Returns</headline><contents><line><![CDATA[_boolean_ Whether we received the expected status code or not.]]></line></contents></section></docBlock><documented>true</documented><source><startLine>780</startLine><endLine>790</endLine><numberOfLines>11</numberOfLines><code><![CDATA[public function isOK($codes = array(200, 201, 204))
{
    if (is_array($codes))
    {
        return in_array($this-&gt;status, $codes);
    }
    else
    {
        return ($this-&gt;status == $codes);
    }
}
]]></code></source><examples><example><title><![CDATA[Successful response code should make isOK() return true.]]></title><code><![CDATA[$http = new RequestCore('http://github.com/skyzyx/requestcore/raw/master/_tests/test_request.txt');
$http-&gt;send_request();

$response = new ResponseCore(
	$http-&gt;get_response_header(),
	$http-&gt;get_response_body(),
	$http-&gt;get_response_code()
);

var_dump($response-&gt;isOK());]]></code><result><![CDATA[bool(true)]]></result></example><example><title><![CDATA[Invalid response code (e.g. 999) should make isOK() fail.]]></title><code><![CDATA[$http = new RequestCore('http://github.com/skyzyx/requestcore/raw/master/_tests/test_request.txt');
$http-&gt;send_request();

$response = new ResponseCore(
	$http-&gt;get_response_header(),
	$http-&gt;get_response_body(),
	999
);

var_dump($response-&gt;isOK());]]></code><result><![CDATA[bool(false)]]></result></example><example><title><![CDATA[Standard request with a standard (successful) response code.]]></title><code><![CDATA[$http = new RequestCore('http://github.com/skyzyx/requestcore/raw/master/_tests/test_request.txt');
$http-&gt;set_method($http::HTTP_PUT);
$response = $http-&gt;send_request(true);

var_dump($response-&gt;isOK());]]></code><result><![CDATA[bool(true)]]></result></example><example><title><![CDATA[Test response code 200 explicitly, excluding other valid response codes.]]></title><code><![CDATA[$http = new RequestCore('http://github.com/skyzyx/requestcore/raw/master/_tests/test_request.txt');
$http-&gt;set_method($http::HTTP_PUT);
$response = $http-&gt;send_request(true);

var_dump($response-&gt;isOK(200));]]></code><result><![CDATA[bool(true)]]></result></example></examples></method></methods></class></vanity>
